# –¢—é–ª–∏–∫–æ–≤ –ú–∞–∫—Å–∏–º –í—è—á–µ—Å–ª–∞–≤–æ–≤–∏—á –ò–£7-13–ë
"""
–¢—Ä–µ–±—É–µ—Ç—Å—è –Ω–∞–ø–∏—Å–∞—Ç—å –ø—Ä–æ–≥—Ä–∞–º–º—É –¥–ª—è –≤—ã—á–∏—Å–ª–µ–Ω–∏—è –ø—Ä–∏–±–ª–∏–∂—ë–Ω–Ω–æ–≥–æ –∑–Ω–∞—á–µ–Ω–∏—è –∏–Ω—Ç–µ–≥—Ä–∞–ª–∞
–∏–∑–≤–µ—Å—Ç–Ω–æ–π, –∑–∞–¥–∞–Ω–Ω–æ–π –≤ –ø—Ä–æ–≥—Ä–∞–º–º–µ, —Ñ—É–Ω–∫—Ü–∏–∏ –¥–≤—É–º—è —Ä–∞–∑–Ω—ã–º–∏ –º–µ—Ç–æ–¥–∞–º–∏ (–ø–æ –≤–∞—Ä–∏–∞–Ω—Ç—É).
–ü—Ä–æ–≥—Ä–∞–º–º–∞ –¥–æ–ª–∂–Ω–∞ –ø–æ–∑–≤–æ–ª—è—Ç—å –∑–∞–¥–∞—Ç—å –Ω–∞—á–∞–ª–æ –∏ –∫–æ–Ω–µ—Ü –æ—Ç—Ä–µ–∑–∫–∞ –∏–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞–Ω–∏—è, –∞ —Ç–∞–∫–∂–µ
N1 –∏ N2 - –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —É—á–∞—Å—Ç–∫–æ–≤ —Ä–∞–∑–±–∏–µ–Ω–∏—è.
–î–∞–ª–µ–µ –Ω–∞ –æ—Å–Ω–æ–≤–µ –∏–∑–≤–µ—Å—Ç–Ω–æ–π, –∑–∞–¥–∞–Ω–Ω–æ–π –≤ –ø—Ä–æ–≥—Ä–∞–º–º–µ, –ø–µ—Ä–≤–æ–æ–±—Ä–∞–∑–Ω–æ–π –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å, –∫–∞–∫–æ–π
–º–µ—Ç–æ–¥ —è–≤–ª—è–µ—Ç—Å—è –Ω–∞–∏–±–æ–ª–µ–µ —Ç–æ—á–Ω—ã–º. –î–ª—è —ç—Ç–æ–≥–æ —Ç—Ä–µ–±—É–µ—Ç—Å—è –≤—ã—á–∏—Å–ª–∏—Ç—å –∏ –æ—Ç–æ–±—Ä–∞–∑–∏—Ç—å
–∞–±—Å–æ–ª—é—Ç–Ω—É—é –∏ –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω—É—é –ø–æ–≥—Ä–µ—à–Ω–æ—Å—Ç–∏ –∫–∞–∂–¥–æ–≥–æ –∏–∑ —á–µ—Ç—ã—Ä—ë—Ö –∏–∑–º–µ—Ä–µ–Ω–∏–π. –ú–µ—Ç–æ–¥,
–∏–∑–º–µ—Ä–µ–Ω–∏–µ –∫–æ—Ç–æ—Ä–æ–≥–æ —Å –æ–¥–Ω–∏–º –∏–∑ —Ä–∞–∑–±–∏–µ–Ω–∏–π –¥–∞–ª–æ —Å–∞–º–æ–µ –±–ª–∏–∑–∫–æ–µ –∫ –ø–µ—Ä–≤–æ–æ–±—Ä–∞–∑–Ω–æ–π
–∑–Ω–∞—á–µ–Ω–∏–µ, —Å—á–∏—Ç–∞–µ—Ç—Å—è –Ω–∞–∏–±–æ–ª–µ–µ —Ç–æ—á–Ω—ã–º.
–ó–∞—Ç–µ–º –¥–ª—è –¥—Ä—É–≥–æ–≥–æ, –º–µ–Ω–µ–µ —Ç–æ—á–Ω–æ–≥–æ –º–µ—Ç–æ–¥–∞, –∏—Ç–µ—Ä–∞—Ü–∏–æ–Ω–Ω–æ –≤—ã—á–∏—Å–ª–∏—Ç—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —É—á–∞—Å—Ç–∫–æ–≤
—Ä–∞–∑–±–∏–µ–Ω–∏—è, –¥–ª—è –∫–æ—Ç–æ—Ä–æ–≥–æ –∏–Ω—Ç–µ–≥—Ä–∞–ª –±—É–¥–µ—Ç –≤—ã—á–∏—Å–ª–µ–Ω —Å –∑–∞–¥–∞–Ω–Ω–æ–π —Ç–æ—á–Ω–æ—Å—Ç—å—é, –Ω–∞ –æ—Å–Ω–æ–≤–µ
—Ñ–æ—Ä–º—É–ª—ã:
|ùêº(ùëÅ) ‚àí ùêº(2ùëÅ)| < Œµ
"""
# –ø—Ä–∞–≤—ã—Ö –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫–æ–≤
# —Ç—Ä–∞–ø–µ—Ü–∏–π
import functions as f

eps = 10 ** -7
a, b = 0, 0
n1, n2 = 1, 1
try:
    a, b = map(float, input("–í–≤–µ–¥–∏—Ç–µ –Ω–∞—á–∞–ª–æ –∏ –∫–æ–Ω–µ—Ü —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª: ").split(" "))  # –≤–≤–æ–¥ –Ω–∞—á–∞–ª–∞ –∏ –∫–æ–Ω—Ü–∞ –∏–Ω—Ç–µ–≥—Ä–∞–ª–∞
except:
    print("–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –≤–≤–æ–¥–∏–º—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è.(–∑–Ω–∞—á–µ–Ω–∏—è –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å —Ç–∏–ø–∞ float)")
    exit()

try:
    n1, n2 = map(int, input("–í–≤–µ–¥–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —É—á–∞—Å—Ç–∫–æ–≤ —Ä–∞–∑–±–∏–µ–Ω–∏—è —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª: ").split(" "))
    # –≤–≤–æ–¥ —É—á–∞—Å—Ç–∫–æ–≤ —Ä–∞–∑–±–∏–µ–Ω–∏—è
except:
    print("–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –≤–≤–æ–¥–∏–º—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è.(–∑–Ω–∞—á–µ–Ω–∏—è –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–º–∏ —Ü–µ–ª—ã–º–∏ —á–∏—Å–ª–∞–º–∏)")
    exit()
if n1 <= 0 or n2 <= 0:
    print("–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –≤–≤–æ–¥–∏–º–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ —Ä–∞–∑–±–∏–µ–Ω–∏–π, –æ–Ω–æ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–º.")
    exit()

values = [f.right_rectangle(a, b, n1, eps), f.right_rectangle(a, b, n2, eps),
          f.trapeze(a, b, n1, eps), f.trapeze(a, b, n2, eps)]
true_value = f.integral(a, b)
f.print_out(a, b, n1, n2, eps)
f.print_errors(true_value, n1, n2, values)
if n1 >= n2:
    error1 = f.absolute_error(values[0], true_value)
    error2 = f.absolute_error(values[2], true_value)
    if abs(error1 - error2) <= eps:
        print("–ù–∞–∏–±–æ–ª–µ–µ —Ç–æ—á–Ω—ã–º —Å–ø–æ—Å–æ–±–æ–º –≤—ã—á–∏—Å–ª–µ–Ω–∏—è —è–≤–ª—è–µ—Ç—Å—è –º–µ—Ç–æ–¥ –ø—Ä–∞–≤—ã—Ö –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫–æ–≤.")
        error = -1.0
        try:
            error = float(input("–í–≤–µ–¥–∏—Ç–µ —Ç–æ—á–Ω–æ—Å—Ç—å –≤—ã—á–∏—Å–ª–µ–Ω–∏—è –¥–ª—è –º–µ–Ω–µ–µ —Ç–æ—á–Ω–æ–≥–æ –º–µ—Ç–æ–¥–∞: "))
        except:
            print("–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –≤–≤–æ–¥–∏–º–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ.(–∑–Ω–∞—á–µ–Ω–∏–µ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å —Ç–∏–ø–∞ float)")
            exit()
        if error < 0:
            print("–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –≤–≤–æ–¥–∏–º–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ —Ç–æ—á–Ω–æ—Å—Ç–∏, –æ–Ω–æ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–º —á–∏—Å–ª–æ–º.")
            exit()
        count = f.count_of_iter(error, 1, a, b, eps)
        print("–ù–µ–æ–±—Ö–æ–¥–∏–º–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä–∞–∑–±–∏–µ–Ω–∏–π –¥–ª—è –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è —Ç–æ—á–Ω–æ—Å—Ç–∏ –º–µ—Ç–æ–¥–æ–º —Ç—Ä–∞–ø–µ—Ü–∏–π:", count)
    else:
        print("–ù–∞–∏–±–æ–ª–µ–µ —Ç–æ—á–Ω—ã–º —Å–ø–æ—Å–æ–±–æ–º –≤—ã—á–∏—Å–ª–µ–Ω–∏—è —è–≤–ª—è–µ—Ç—Å—è –º–µ—Ç–æ–¥ —Ç—Ä–∞–ø–µ—Ü–∏–π.")
        error = -1.0
        try:
            error = float(input("–í–≤–µ–¥–∏—Ç–µ —Ç–æ—á–Ω–æ—Å—Ç—å –≤—ã—á–∏—Å–ª–µ–Ω–∏—è –¥–ª—è –º–µ–Ω–µ–µ —Ç–æ—á–Ω–æ–≥–æ –º–µ—Ç–æ–¥–∞: "))
        except:
            print("–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –≤–≤–æ–¥–∏–º–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ.(–∑–Ω–∞—á–µ–Ω–∏–µ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å —Ç–∏–ø–∞ float)")
            exit()
        if error < 0:
            print("–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –≤–≤–æ–¥–∏–º–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ —Ç–æ—á–Ω–æ—Å—Ç–∏, –æ–Ω–æ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–º —á–∏—Å–ª–æ–º.")
            exit()
        count = f.count_of_iter(error, 0, a, b, eps)
        print("–ù–µ–æ–±—Ö–æ–¥–∏–º–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä–∞–∑–±–∏–µ–Ω–∏–π –¥–ª—è –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è —Ç–æ—á–Ω–æ—Å—Ç–∏ –º–µ—Ç–æ–¥–æ–º –ø—Ä–∞–≤—ã—Ö –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫–æ–≤:", count)
else:
    error1 = f.absolute_error(values[1], true_value)
    error2 = f.absolute_error(values[3], true_value)
    if abs(error1 - error2) <= eps:
        print("–ù–∞–∏–±–æ–ª–µ–µ —Ç–æ—á–Ω—ã–º —Å–ø–æ—Å–æ–±–æ–º –≤—ã—á–∏—Å–ª–µ–Ω–∏—è —è–≤–ª—è–µ—Ç—Å—è –º–µ—Ç–æ–¥ –ø—Ä–∞–≤—ã—Ö –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫–æ–≤.")
        error = -1.0
        try:
            error = float(input("–í–≤–µ–¥–∏—Ç–µ —Ç–æ—á–Ω–æ—Å—Ç—å –≤—ã—á–∏—Å–ª–µ–Ω–∏—è –¥–ª—è –º–µ–Ω–µ–µ —Ç–æ—á–Ω–æ–≥–æ –º–µ—Ç–æ–¥–∞: "))
        except:
            print("–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –≤–≤–æ–¥–∏–º–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ.(–∑–Ω–∞—á–µ–Ω–∏–µ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å —Ç–∏–ø–∞ float)")
            exit()
        if error < 0:
            print("–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –≤–≤–æ–¥–∏–º–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ —Ç–æ—á–Ω–æ—Å—Ç–∏, –æ–Ω–æ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–º —á–∏—Å–ª–æ–º.")
            exit()
        count = f.count_of_iter(error, 1, a, b, eps)
        print("–ù–µ–æ–±—Ö–æ–¥–∏–º–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä–∞–∑–±–∏–µ–Ω–∏–π –¥–ª—è –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è —Ç–æ—á–Ω–æ—Å—Ç–∏ –º–µ—Ç–æ–¥–æ–º —Ç—Ä–∞–ø–µ—Ü–∏–π:", count)
    else:
        print("–ù–∞–∏–±–æ–ª–µ–µ —Ç–æ—á–Ω—ã–º —Å–ø–æ—Å–æ–±–æ–º –≤—ã—á–∏—Å–ª–µ–Ω–∏—è —è–≤–ª—è–µ—Ç—Å—è –º–µ—Ç–æ–¥ —Ç—Ä–∞–ø–µ—Ü–∏–π.")
        error = -1.0
        try:
            error = float(input("–í–≤–µ–¥–∏—Ç–µ —Ç–æ—á–Ω–æ—Å—Ç—å –≤—ã—á–∏—Å–ª–µ–Ω–∏—è –¥–ª—è –º–µ–Ω–µ–µ —Ç–æ—á–Ω–æ–≥–æ –º–µ—Ç–æ–¥–∞: "))
        except:
            print("–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –≤–≤–æ–¥–∏–º–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ.(–∑–Ω–∞—á–µ–Ω–∏–µ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å —Ç–∏–ø–∞ float)")
            exit()
        if error < 0:
            print("–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –≤–≤–æ–¥–∏–º–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ —Ç–æ—á–Ω–æ—Å—Ç–∏, –æ–Ω–æ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–º —á–∏—Å–ª–æ–º.")
            exit()
        count = f.count_of_iter(error, 0, a, b, eps)
        print("–ù–µ–æ–±—Ö–æ–¥–∏–º–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä–∞–∑–±–∏–µ–Ω–∏–π –¥–ª—è –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è —Ç–æ—á–Ω–æ—Å—Ç–∏ –º–µ—Ç–æ–¥–æ–º –ø—Ä–∞–≤—ã—Ö –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫–æ–≤:", count)
