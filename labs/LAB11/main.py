#Тюликов Максим Вячеславович ИУ7-13Б
"""
Написать программу для демонстрации работы метода сортировки (по варианту) на
примере массива целых чисел.
Программа должна состоять из двух частей (этапов работы) и выполнять два действия
последовательно:
1. сначала отсортировать заданный пользователем массив для доказательства
корректности работы алгоритма;
2. затем составить таблицу замеров времени сортировки списков трёх различных
(заданных пользователем) размерностей и количества перестановок в каждом
из них.
В части 2 для каждой размерности списка необходимо исследовать:
● случайный список,
● отсортированный список,
● список, отсортированный в обратном порядке.
"""
#метод простого выбора
import functions as f

n = 1
try:
    n = int(input("Введите длину массива: "))  # ввод длины массива
except:
    print("Проверьте вводимое значение, оно должно быть типа int.")
    exit()
if n <= 0:
    print("Проверьте вводимое значение, оно должно быть положительным.")
    exit()
x = []
for i in range(n):
    a = 0
    try:
        a = int(input("Введите {} элемент массива: ".format(i + 1)))  # ввод значений для массива
    except:
        print("Проверьте вводимое значение, оно должно быть типа int.")
        exit()
    x.append(a)

print("Массив до сортировки:")
print(*x, sep="\n")
x = f.selection_sort(len(x), x)
print("Массив после сортировки:")
print(*x, sep="\n")
n1, n2, n3 = 1, 1, 1
try:
    n1, n2, n3 = map(int, input("Введите размерности массивов через пробел: ").split(" "))  # ввод длин массивов
except:
    print("Проверьте вводимые значения, они должны быть типа int и введены через пробел.(Пример:1 1 1)")
    exit()
if n1 <= 0 or n2 <= 0 or n3 <= 0:
    print("Проверьте вводимые значения, они должны быть положительными.")
    exit()

mas = f.create_massives(n1, n2, n3)
print("_" * 104)
print("|{:<18.7s}|{:^27g}|{:^27g}|{:^27g}|".format("", n1, n2, n3))
s1 = "время"
s2 = "перестановки"
print("|{:<18.7s}|{:14s}|{:12s}|{:14s}|{:12s}|{:14s}|{:12s}|".format("", s1, s2, s1, s2, s1, s2))
for i in range(3):
    if i == 0:
        s = "|{:<18s}|".format("Упорядоченный")
    elif i == 1:
        s = "|{:<18s}|".format("Случайный")
    else:
        s = "|{:<18s}|".format("Обратный порядок")
    for j in range(3):
        time, counts = f.selection_sort_time(len(mas[i][j]), mas[i][j])  # составление таблицы замеров времени
        s += "{:<14.7g}|{:<12.7g}|".format(time, counts)
    print(s)
print("‾" * 104)
